services:
  elasticsearch:
    env_file:
      - .env
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: elasticsearch-prod
    environment:
      - node.name=es-prod
      - cluster.name=es-cluster-prod
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.keystore.path=/usr/share/elasticsearch/config/elasticsearch.p12
      - xpack.security.http.ssl.keystore.password=${ELASTIC_KEYSTORE_PASSWORD}
      - xpack.security.http.ssl.truststore.path=/usr/share/elasticsearch/config/elasticsearch.p12
      - xpack.security.http.ssl.truststore.password=${ELASTIC_KEYSTORE_PASSWORD}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ./certs/prod/elasticsearch.p12:/usr/share/elasticsearch/config/elasticsearch.p12
      - elasticsearch_prod_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - app-network

  kibana:
    env_file:
      - .env
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: kibana-prod
    environment:
      - ELASTICSEARCH_HOSTS=https://elasticsearch.www.projectkkk.com:9200
      - I18N_LOCALE=ko
    volumes:
      - ./config/kibana/kibana_prod.yml:/usr/share/kibana/config/kibana.yml
      - ./certs/prod/kibana.p12:/usr/share/kibana/config/kibana.p12
      - ./certs/prod/kibana.pem:/usr/share/kibana/config/kibana.pem
    depends_on:
      - elasticsearch
    networks:
      - app-network

  logstash:
    env_file:
      - .env
    image: docker.elastic.co/logstash/logstash:7.17.9
    container_name: logstash-prod
    volumes:
      - ./config/logstash/config/logstash-prod.yml:/usr/share/logstash/config/logstash.yml
      - ./config/logstash/pipeline/logstash-prod.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./certs/prod/logstash.p12:/usr/share/logstash/config/logstash.p12
    environment:
      - "LS_JAVA_OPTS=-Xms2g -Xmx2g"
    depends_on:
      - elasticsearch
    networks:
      - app-network

  zookeeper:
    env_file:
      - .env
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper-prod
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    env_file:
      - .env
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-prod
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "kafka-logs:1:1,error-logs:1:1"
    volumes:
      - kafka_prod_data1:/var/lib/kafka/data
    networks:
      - app-network

  spring-app:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_ENV: prod
    image: spring-app:prod
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://zigzag-database.cnkq8ww86ffm.ap-northeast-2.rds.amazonaws.com:3306/zigzagDB
      - SPRING_DATASOURCE_USERNAME=Kang
      - SPRING_DATASOURCE_PASSWORD=alstj121!
      - SPRING_ELASTICSEARCH_URIS=https://elasticsearch.projectkkk.com:9200
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_KEY_STORE=/project/certs/prod/springboot.p12
      - SERVER_SSL_KEY_STORE_PASSWORD=Ccenter123456!
    volumes:
      - ./certs/prod/springboot.p12:/project/certs/prod/springboot.p12
    ports:
      - "443:443"
    depends_on:
      - elasticsearch
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

