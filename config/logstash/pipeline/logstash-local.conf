input {
  beats {
    port => 5044
    host => "0.0.0.0"
  }

  kafka {
    bootstrap_servers => "kafka:29092"
    topics => ["kafka-logs", "error-logs"]  # 설정한 토픽 이름과 동일하게
    codec => json
    client_id => "logstash"
    group_id => "elk-logstash"
    auto_offset_reset => "latest"
  }
}

filter {
  if [topic] == "kafka-logs" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{NUMBER:pid} --- \[%{DATA:thread}\] %{DATA:class} : %{GREEDYDATA:msg}" }
    }

    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
      target => "@timestamp"
    }

    mutate {
      add_field => { "log_type" => "application" }
    }
  }

  if [topic] == "error-logs" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{NUMBER:pid} --- \[%{DATA:thread}\] %{DATA:class} : %{GREEDYDATA:msg}" }
    }

    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
      target => "@timestamp"
    }

    mutate {
      add_field => { "log_type" => "error" }
    }
  }
}

output {
  if [log_type] == "application" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "application-logs-%{+YYYY.MM.dd}"
    }
  }

  if [log_type] == "error" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "error-logs-%{+YYYY.MM.dd}"
    }
  }
}