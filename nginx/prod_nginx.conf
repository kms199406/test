# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name www.projectkkk.com;
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server block
server {
    listen 443 ssl;
    server_name www.projectkkk.com;

    # SSL Certificate
    ssl_certificate /etc/nginx/ssl/projectkkk.crt;
    ssl_certificate_key /etc/nginx/ssl/projectkkk.key;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # API Endpoint for Spring Boot
    location /api/ {
        proxy_pass https://spring-app-prod:443;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeout Settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer Settings
        proxy_buffer_size 4k;
        proxy_buffers 4 32k;
        proxy_busy_buffers_size 64k;
    }

    # Elasticsearch Proxy (protected with basic auth)
    location /elasticsearch/ {
        auth_basic "Elasticsearch Access";
        auth_basic_user_file /etc/nginx/.htpasswd;

        proxy_pass https://elasticsearch-prod:9200/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Timeout Settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # SSL Verification for Elasticsearch
        proxy_ssl_certificate /etc/nginx/ssl/projectkkk.crt;
        proxy_ssl_certificate_key /etc/nginx/ssl/projectkkk.key;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
        proxy_ssl_verify on;
    }

    # Kibana Proxy (protected with basic auth)
    location /kibana/ {
        auth_basic "Kibana Access";
        auth_basic_user_file /etc/nginx/.htpasswd;

        proxy_pass https://kibana-prod:5601/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # WebSocket Support for Kibana
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # SSL Verification for Kibana
        proxy_ssl_certificate /etc/nginx/ssl/projectkkk.crt;
        proxy_ssl_certificate_key /etc/nginx/ssl/projectkkk.key;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
        proxy_ssl_verify on;
    }

    # Custom Error Pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /404.html {
        root /usr/share/nginx/html;
    }

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
