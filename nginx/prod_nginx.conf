# HTTP를 HTTPS로 리다이렉션 - 모든 도메인에 대해
server {
   listen 80;
   server_name www.projectkkk.com kibana.projectkkk.com elasticsearch.projectkkk.com;
   return 301 https://$server_name$request_uri;
}

# 메인 애플리케이션 서버 (Spring Boot)
server {
   listen 443 ssl;
   server_name www.projectkkk.com;

   # SSL Certificate
   ssl_certificate /etc/nginx/ssl/springboot.crt;
   ssl_certificate_key /etc/nginx/ssl/springboot.key;

   # SSL Settings
   ssl_protocols TLSv1.2 TLSv1.3;
   ssl_ciphers HIGH:!aNULL:!MD5;
   ssl_prefer_server_ciphers on;
   ssl_session_cache shared:SSL:10m;
   ssl_session_timeout 10m;

   # Security Headers
   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
   add_header X-Frame-Options "SAMEORIGIN" always;
   add_header X-XSS-Protection "1; mode=block" always;
   add_header X-Content-Type-Options "nosniff" always;

   # API Endpoint for Spring Boot
   location /api/ {
       proxy_pass https://spring-app-prod:443;
       proxy_http_version 1.1;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;

       # Timeout Settings
       proxy_connect_timeout 60s;
       proxy_send_timeout 60s;
       proxy_read_timeout 60s;

       # Buffer Settings
       proxy_buffer_size 4k;
       proxy_buffers 4 32k;
       proxy_busy_buffers_size 64k;
   }
}

# Kibana 서버
server {
   listen 443 ssl;
   server_name kibana.projectkkk.com;

   # SSL Certificate
   ssl_certificate /etc/nginx/ssl/kibana.crt;
   ssl_certificate_key /etc/nginx/ssl/kibana.key;

   # SSL Settings
   ssl_protocols TLSv1.2 TLSv1.3;
   ssl_ciphers HIGH:!aNULL:!MD5;
   ssl_prefer_server_ciphers on;
   ssl_session_cache shared:SSL:10m;
   ssl_session_timeout 10m;

   # Security Headers
   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
   add_header X-Frame-Options "SAMEORIGIN" always;
   add_header X-XSS-Protection "1; mode=block" always;
   add_header X-Content-Type-Options "nosniff" always;

   location / {
       auth_basic "Kibana Access";
       auth_basic_user_file /etc/nginx/.htpasswd;

       proxy_pass https://kibana-prod:5601/;
       proxy_http_version 1.1;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";

       proxy_ssl_certificate /etc/nginx/ssl/kibana.crt;
       proxy_ssl_certificate_key /etc/nginx/ssl/kibana.key;
       proxy_ssl_protocols TLSv1.2 TLSv1.3;
       proxy_ssl_verify on;
   }
}

# Elasticsearch 서버
server {
   listen 443 ssl;
   server_name elasticsearch.projectkkk.com;

   # SSL Certificate
   ssl_certificate /etc/nginx/ssl/elasticsearch.crt;
   ssl_certificate_key /etc/nginx/ssl/elasticsearch.key;

   # SSL Settings
   ssl_protocols TLSv1.2 TLSv1.3;
   ssl_ciphers HIGH:!aNULL:!MD5;
   ssl_prefer_server_ciphers on;
   ssl_session_cache shared:SSL:10m;
   ssl_session_timeout 10m;

   # Security Headers
   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
   add_header X-Frame-Options "SAMEORIGIN" always;
   add_header X-XSS-Protection "1; mode=block" always;
   add_header X-Content-Type-Options "nosniff" always;

   location / {
       auth_basic "Elasticsearch Access";
       auth_basic_user_file /etc/nginx/.htpasswd;

       proxy_pass https://elasticsearch-prod:9200/;
       proxy_http_version 1.1;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;

       proxy_ssl_certificate /etc/nginx/ssl/elasticsearch.crt;
       proxy_ssl_certificate_key /etc/nginx/ssl/elasticsearch.key;
       proxy_ssl_protocols TLSv1.2 TLSv1.3;
       proxy_ssl_verify on;
   }
}