services:
  spring-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_ENV: local
    container_name: spring-app-local
    environment:
      SPRING_PROFILES_ACTIVE: local
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/zigzag_test
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 0000
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch-local:9200
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SERVER_SSL_ENABLED: false
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - kafka
      - elasticsearch
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql-local
    environment:
      MYSQL_ROOT_PASSWORD: 0000
      MYSQL_DATABASE: zigzag_test
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "kafka-logs:1:1,error-logs:1:1"
    ports:
      - "29092:29092"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: elasticsearch-local
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  elasticsearch_data: {}
  kafka_data: {}
  mysql_data: {}
